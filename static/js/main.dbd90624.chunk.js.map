{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","state","expanded","toggleExpanded","bind","this","setState","event","className","summary","location","start","dateTime","timeZone","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","mockData","JSON","parse","stringify","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","token","removeQuery","url","extractLocations","setItem","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","Set","App","currentLocation","eventCount","mounted","locationEvents","slice","scrollTo","top","behavior","src","alt","scrollTop","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.dbd90624.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //event: {},\n      expanded: false,\n    };\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n  toggleExpanded() {\n    this.setState({\n      expanded: !this.state.expanded,\n    });\n  }\n  render() {\n    let event = this.props.event;\n    return (\n      <div className=\"event\">\n        <h2 className=\"event__Overview--name\">{event.summary}</h2>\n        <div className=\"basic-info\">\n          <h2 className=\"event-location\">{event.location}</h2>\n          <h3 className=\"event__Overview--localDate\">\n            start: {event.start.dateTime} - Time Zone: {event.start.timeZone}\n          </h3>\n          {this.state.expanded === true && (\n            <p className=\"event-details\">{event.description}</p>\n          )}\n        </div>\n        <button className=\"details-btn\" onClick={this.toggleExpanded}>\n          {!this.state.expanded ? 'Read More' : 'Close'}\n        </button>\n      </div>\n    );\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion, 0);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          placeholder=\"Search a city...\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32\n  };\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n\n    if (value < 1 || value > 32) {\n      this.setState({\n        numberOfEvents: ''\n      });\n    }\n    else {\n      this.setState({\n        numberOfEvents: value\n      });\n    }\n\n  };\n  render() {\n    const { numberOfEvents } = this.state;\n    return (\n      <div className=\"numberOfEvents\">\n        <input\n          className=\"event-number-input\"\n          type=\"number\"\n          placeholder=\"0\"\n          id=\"numberOfEvents__input\"\n          value={numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","let mockData = [{\n  \"kind\": \"calendar#event\",\n  \"etag\": \"\\\"3181161784712000\\\"\",\n  \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n  \"status\": \"confirmed\",\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n  \"created\": \"2020-05-19T19:17:46.000Z\",\n  \"updated\": \"2020-05-27T12:01:32.356Z\",\n  \"summary\": \"Learn JavaScript\",\n  \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n  \"location\": \"London, UK\",\n  \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"start\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"end\": {\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n  \"originalStartTime\": {\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n  \"sequence\": 0,\n  \"reminders\": {\n    \"useDefault\": true\n  },\n  \"eventType\": \"default\"\n},\n{\n  \"kind\": \"calendar#event\",\n  \"etag\": \"\\\"3181159875584000\\\"\",\n  \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n  \"status\": \"confirmed\",\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n  \"created\": \"2020-05-19T19:14:30.000Z\",\n  \"updated\": \"2020-05-27T11:45:37.792Z\",\n  \"summary\": \"React is Fun\",\n  \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n  \"location\": \"Berlin, Germany\",\n  \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n  },\n  \"start\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"end\": {\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n  \"originalStartTime\": {\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n  \"sequence\": 0,\n  \"reminders\": {\n    \"useDefault\": true\n  },\n  \"eventType\": \"default\"\n}]\n\nmockData = JSON.parse(JSON.stringify(mockData));\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://4v4gfj7cpj.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error);\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery(); // eslint-disable-next-line\n    const url = 'https://4v4gfj7cpj.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nexport const getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch( // eslint-disable-next-line\n    'https://4v4gfj7cpj.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: 'all',\n    numberOfEvents: 32\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    this.mounted = true;\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all' && eventCount === 0) ?\n        events : location !== 'all' && eventCount === 0\n          ? events.filter((event) => event.location === location)\n          : events.slice(0, eventCount);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents,\n          numberOfEvents: eventCount,\n        });\n      }\n    });\n  }\n\n  scrollTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <img src=\"https://img.icons8.com/wired/64/000000/worldwide-location.png\" alt=\"World logo\" />\n          <h1>Let's Meet-App</h1>\n          <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n          <EventList className=\"eventlist\" events={this.state.events} />\n          <button className=\"scrollup-btn\" onClick={this.scrollTop}>&#8593;</button>\n          <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('64da1564b1d14c79bcc89d4231c50688').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}